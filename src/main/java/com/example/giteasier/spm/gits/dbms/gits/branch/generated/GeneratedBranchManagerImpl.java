package com.example.giteasier.spm.gits.dbms.gits.branch.generated;

import com.example.giteasier.spm.gits.dbms.gits.branch.Branch;
import com.example.giteasier.spm.gits.dbms.gits.branch.BranchManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.example.giteasier.spm.gits.dbms.gits.branch.Branch} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedBranchManagerImpl 
extends AbstractManager<Branch> 
implements GeneratedBranchManager {
    
    private final TableIdentifier<Branch> tableIdentifier;
    
    protected GeneratedBranchManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("gits", "gits", "branch");
    }
    
    @Override
    public TableIdentifier<Branch> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Branch>> fields() {
        return BranchManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<Branch>> primaryKeyFields() {
        return Stream.of(
            Branch.ID,
            Branch.PROJECT_ID
        );
    }
}